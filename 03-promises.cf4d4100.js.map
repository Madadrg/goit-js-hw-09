{"mappings":"AAAA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbQ,SAASC,iBAAiB,oBAAoB,KAC5C,MAAMC,EAAOF,SAASG,cAAc,SAEpCD,EAAKD,iBAAiB,UAAUG,MAAMC,IACpCA,EAAMC,iBAEN,MAAMC,EAAaL,EAAKM,SAAgB,MAClCC,EAAYP,EAAKM,SAAe,KAChCE,EAAcR,EAAKM,SAAiB,OAEpCG,EAAeC,SAASL,EAAWM,MAAO,IAC1CC,EAAOF,SAASH,EAAUI,MAAO,IACjCE,EAASH,SAASF,EAAYG,MAAO,IAE3C,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAMC,EAAeN,EAAeK,EAAIF,EAExC,IACE,MAAMI,QAAe5B,EAAc0B,EAAI,EAAGC,GAC1CE,QAAQC,IACN,wBAAsBF,EAAI3B,eAAoB2B,EAAE1B,U,CAElD,MAAO6B,GACPF,QAAQC,IACN,sBAAoBC,EAAE9B,eAAmB8B,EAAE7B,U,KAIjD","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const form = document.querySelector('.form');\n\n  form.addEventListener('submit', async event => {\n    event.preventDefault();\n\n    const delayInput = form.elements['delay'];\n    const stepInput = form.elements['step'];\n    const amountInput = form.elements['amount'];\n\n    const initialDelay = parseInt(delayInput.value, 10);\n    const step = parseInt(stepInput.value, 10);\n    const amount = parseInt(amountInput.value, 10);\n\n    for (let i = 0; i < amount; i++) {\n      const currentDelay = initialDelay + i * step;\n\n      try {\n        const result = await createPromise(i + 1, currentDelay);\n        console.log(\n          ` ✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n        );\n      } catch (error) {\n        console.log(\n          `❌ Rejected promise ${error.position} in ${error.delay}ms`\n        );\n      }\n    }\n  });\n});\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","addEventListener","form","querySelector","async","event","preventDefault","delayInput","elements","stepInput","amountInput","initialDelay","parseInt","value","step","amount","i","currentDelay","result","console","log","error"],"version":3,"file":"03-promises.cf4d4100.js.map"}